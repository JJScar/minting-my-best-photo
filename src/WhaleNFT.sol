//                                               .=+*####*+=:.
//                                             .*##############:
//                                           .*####-      .=*##-
//                                         .:*##*:.
//                                         .*###.
//                      .....             .+###
//                     .=####*=:.         :###:
//                     .-*#######+.      .###=.
//                           .=####+     -###-
//                             .-###+.  .+##+.
//                               :###*. .+##+
//                                .%##= :*##+
//                                 .*+. .-*+.
//                          ..:--======--::.
//                     .-+*##################**=:
//                 .:*########*+=------=+*#########=..
//              .:+#####*+-:::::::::::::::::::=+*#####=.                                   ....
//            .=#####+-::::::::::::::::::::::::::-=*####*:.                            .=*######*=.
//          .=####+::::::::::::::::::::::::::::::::::=#####:                         .*############*:
//        .-####+-:::::::::::::::::::::::::::::::::::::-*###*..                     :*###=::::::=*###-.
//       .*###+::::::::::::::::::::::::::::::::::::::::::=####-.                   .=###-:::::::::*###.
//     .:###*-:::::::::::::::::::::::::::::::::::::::::::::=###*.           .-+****=###+:::::::-==+###+
//     -###*::::::::::::::::::::::::::::::::::::::::::::::::=###+..      .-############=::::=##########
//    -###+::::::::::::::::::::::::::::::::::::::::::::::::::-###*.    .:*###*=---=+*##=:::*###*=----=.
//   -###+::::::::::::::::::::::::::::::::::-+**=:::::::::::::-###*.   .###*-::::::::-::::+###:
//  :*##*-:::::::::::::::::::::::::::::::::-#####*-::::::::::::-###=   *###:::::::::::::::*##*.
// .=###-::::::::::::::::::::::::::::::::::-#####*-:::::::::::::=###:  ###+::::-=+***+-:::-###-
// .*##+::::::::::::::::::::::::::::::::::::-*##+-::::::::::::::-*##+. *###::=*#########=::+##*
// -###-:::::::::::::::::::::::::::::::::::::::::::::::::::::::::+##*. .####=###*:...+###=:-###:
// +##*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::=###-. :*#####+      *##+:-*##=
// *##+::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-###-.  .-*###.      *##+--*##+
// ###=:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::###=.    ..:.      :###+:-+##*
// ###+:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*##=.            ..*##*-:-*##+
// +##*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::=###=.          :=###*-::-*##=
// :###+:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::=####**+====+*#####=::::=###:
// .=###=:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-+#############*=::::::###+
//  .=###+-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::--====--::::::::-###*.
//  .-###################################*-:::::::::::::::::::::::::::::::::::::::::::::+###+.
// .#####################################*-::::::::::::::::::::::::::::::::::::::::::-+####=.
// +###::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::--+#####+.
// *##+:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-=+*######+-.
// +###-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::--=++**#########*-:.
// .*########################################################################+-.
//  .-**#####################################################*****++==-:.

// SPDX-License-Identifier: MIT
pragma solidity 0.8.24;

import {ERC721} from "@openzeppelin/contracts/token/ERC721/ERC721.sol";

contract WhaleNFT is ERC721 {
    /*//////////
    // Errors //
    //////////*/

    error WhaleNFT__TokenUriNotFound();

    /*///////////////////
    // State Variables //
    ///////////////////*/

    mapping(uint256 tokenId => string tokenUri) private s_tokenIdToUri;
    uint256 public s_tokenCounter = 100;

    constructor() ERC721("WhaleNFT", "WHT") {
        s_tokenCounter = 0;
    }

    // Minting this NFT should be possible using the HDR Token

    // We will be allowing only a 100 NFTs to be minted

    function mintNft(string memory tokenUri) public {
        s_tokenIdToUri[s_tokenCounter] = tokenUri;
        _safeMint(msg.sender, s_tokenCounter);
        s_tokenCounter = s_tokenCounter + 1;
    }

    function tokenURI(uint256 tokenId) public view override returns (string memory) {
        if (ownerOf(tokenId) == address(0)) {
            revert WhaleNFT__TokenUriNotFound();
        }
        return s_tokenIdToUri[tokenId];
    }

    function getTokenCounter() public view returns (uint256) {
        return s_tokenCounter;
    }
}
